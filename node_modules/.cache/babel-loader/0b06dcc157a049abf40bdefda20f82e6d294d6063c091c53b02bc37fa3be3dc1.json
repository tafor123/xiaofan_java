{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"EditBook\",\n  data() {\n    return {\n      form: {},\n      categories: [],\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入图书名称',\n          trigger: 'blur'\n        }],\n        book_no: [{\n          required: true,\n          message: '请输入标准码',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入借书积分',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    request.get('/category/tree').then(res => {\n      this.categories = res.data;\n    });\n    const id = this.$route.query.id;\n    request.get(\"/book/\" + id).then(res => {\n      this.form = res.data;\n      if (this.form.category) {\n        this.form.categories = this.form.category.split(' > ');\n      }\n    });\n  },\n  methods: {\n    handleCoverSuccess(res) {\n      if (res === '200') {\n        this.form.cover = res.data;\n      }\n    },\n    save() {\n      request.put('/book/update', this.form).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('更新成功');\n          this.$router.push(\"/bookList\");\n        } else {\n          this.$notify.success(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","form","categories","rules","required","message","trigger","book_no","score","created","get","then","res","id","$route","query","category","split","methods","handleCoverSuccess","cover","save","put","code","$notify","success","$router","push","msg"],"sources":["src/views/book/Edit.vue"],"sourcesContent":["<template>\r\n <div style=\"width: 80%\">\r\n   <div style=\"margin-bottom: 30px\">编辑图书信息</div>\r\n   <el-form :inline=\"true\" :rules=\"rules\" ref=\"ruleForm\" :model=\"form\"  label-width=\"100px\">\r\n     <el-form-item label=\"名称\"  prop=\"name\">\r\n       <el-input v-model=\"form.name\" placeholder=\"请输入图书名称\"></el-input>\r\n     </el-form-item>\r\n     <el-form-item style=\"width: 400px\" label=\"描述\" prop=\"description\">\r\n       <el-input type=\"textarea\"  v-model=\"form.description\" placeholder=\"请输入图书描述\"></el-input>\r\n     </el-form-item>\r\n     <el-form-item label=\"出版日期\" prop=\"publish_date\">\r\n       <el-date-picker\r\n           v-model=\"form.publish_date\"\r\n           type=\"date\"\r\n           value-format=\"yyyy-MM-dd\"\r\n           placeholder=\"选择出版日期\">\r\n       </el-date-picker>\r\n     </el-form-item>\r\n     <el-form-item label=\"作者\" prop=\"author\">\r\n       <el-input v-model=\"form.author\" placeholder=\"请输入作者\"></el-input>\r\n     </el-form-item>\r\n     <el-form-item label=\"出版社\" prop=\"publish\">\r\n       <el-input v-model=\"form.publish\" placeholder=\"请输入出版社\"></el-input>\r\n     </el-form-item>\r\n     <el-form-item label=\"分类\" prop=\"category\">\r\n       <el-cascader\r\n           :props=\"{ value: 'name', label: 'name'}\"\r\n           v-model=\"form.categories\"\r\n           :options=\"categories\"\r\n           ></el-cascader>\r\n     </el-form-item>\r\n     <el-form-item label=\"标准码\" prop=\"book_no\">\r\n       <el-input v-model=\"form.book_no\" placeholder=\"请输入标准码\"></el-input>\r\n     </el-form-item>\r\n     <el-form-item label=\"积分\" prop=\"score\">\r\n       <el-input-number v-model=\"form.score\"  :min=\"10\" :max=\"30\" label=\"所用积分\"></el-input-number>\r\n     </el-form-item>\r\n     <el-form-item label=\"封面\" prop=\"cover\">\r\n       <el-upload\r\n           class=\"avatar-uploader\"\r\n           action=\"https://localhost:9090/api/book/file/upload\"\r\n           :show-file-list=\"false\"\r\n           :on-success=\"handleCoverSuccess\"\r\n       >\r\n         <img v-if=\"form.cover\" :src=\"form.cover\" class=\"avatar\">\r\n         <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n       </el-upload>\r\n     </el-form-item>\r\n   </el-form>\r\n\r\n   <div style=\"text-align: center; margin-top: 30px\">\r\n     <el-button type=\"primary\" @click=\"save\" size=\"medium\">提交</el-button>\r\n<!--     <el-button type=\"danger\">返回列表</el-button>-->\r\n   </div>\r\n </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nexport default {\r\n  name: \"EditBook\",\r\n  data(){\r\n    return {\r\n      form: {},\r\n      categories: [],\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请输入图书名称', trigger: 'blur'},\r\n        ],\r\n        book_no: [\r\n          {required: true, message: '请输入标准码', trigger: 'blur'},\r\n        ],\r\n        score: [\r\n          {required: true, message: '请输入借书积分', trigger: 'blur'},\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created(){\r\n    request.get('/category/tree').then(res =>{\r\n      this.categories = res.data\r\n    })\r\n    const id = this.$route.query.id\r\n    request.get(\"/book/\" + id).then(res => {\r\n      this.form =res.data\r\n      if(this.form.category){\r\n        this.form.categories =this.form.category.split(' > ')\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    handleCoverSuccess(res){\r\n      if(res === '200'){\r\n        this.form.cover = res.data\r\n      }\r\n    },\r\n    save(){\r\n      request.put('/book/update',this.form).then(res => {\r\n        if (res.code === '200'){\r\n          this.$notify.success('更新成功')\r\n          this.$router.push(\"/bookList\")\r\n        }else{\r\n          this.$notify.success(res.msg)\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n</style>"],"mappings":";AA0DA,OAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,UAAA;MACAC,KAAA;QACAJ,IAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,OAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,KAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,QAAA;IACAX,OAAA,CAAAY,GAAA,mBAAAC,IAAA,CAAAC,GAAA;MACA,KAAAV,UAAA,GAAAU,GAAA,CAAAZ,IAAA;IACA;IACA,MAAAa,EAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;IACAf,OAAA,CAAAY,GAAA,YAAAG,EAAA,EAAAF,IAAA,CAAAC,GAAA;MACA,KAAAX,IAAA,GAAAW,GAAA,CAAAZ,IAAA;MACA,SAAAC,IAAA,CAAAe,QAAA;QACA,KAAAf,IAAA,CAAAC,UAAA,QAAAD,IAAA,CAAAe,QAAA,CAAAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,mBAAAP,GAAA;MACA,IAAAA,GAAA;QACA,KAAAX,IAAA,CAAAmB,KAAA,GAAAR,GAAA,CAAAZ,IAAA;MACA;IACA;IACAqB,KAAA;MACAvB,OAAA,CAAAwB,GAAA,sBAAArB,IAAA,EAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAW,IAAA;UACA,KAAAC,OAAA,CAAAC,OAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA;UACA,KAAAH,OAAA,CAAAC,OAAA,CAAAb,GAAA,CAAAgB,GAAA;QACA;MAEA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}